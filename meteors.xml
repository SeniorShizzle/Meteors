<?xml version="1.0" encoding="UTF-8"?>
<project name="meteors" default="all">


  <property file="meteors.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!--
  <property name="skip.tests" value="true"/>
   -->

  <!-- Compiler options -->

  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>

  <!-- JDK definitions -->

  <property name="jdk.bin.1.6" value="${jdk.home.1.6}/bin"/>
  <path id="jdk.classpath.1.6">
    <fileset dir="${jdk.home.1.6}">
      <include name="lib/deploy.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javaws.jar"/>
      <include name="lib/jce.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/management-agent.jar"/>
      <include name="lib/plugin.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="../Classes/charsets.jar"/>
      <include name="../Classes/classes.jar"/>
      <include name="../Classes/jsse.jar"/>
      <include name="../Classes/ui.jar"/>
      <include name="lib/ext/apple_provider.jar"/>
      <include name="lib/ext/dnsns.jar"/>
      <include name="lib/ext/localedata.jar"/>
      <include name="lib/ext/sunjce_provider.jar"/>
      <include name="lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>

  <property name="project.jdk.home" value="${jdk.home.1.6}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>


  <!-- Global Libraries -->

  <path id="library.hamcrest_core.classpath">
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
  </path>

  <path id="library.junit_4.11.classpath">
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>

  <path id="library.junit_4.classpath">
    <fileset dir="${idea.home}/plugins/junit/lib">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>

  <!-- Modules -->


  <!-- Module Meteors -->

  <dirname property="module.meteors.basedir" file="${ant.file}"/>


  <property name="module.jdk.home.meteors" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.meteors" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.meteors" value="${project.jdk.classpath}"/>

  <property name="compiler.args.meteors" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>

  <property name="meteors.output.dir" value="${module.meteors.basedir}/out/production/Meteors"/>
  <property name="meteors.testoutput.dir" value="${module.meteors.basedir}/out/test/Meteors"/>

  <path id="meteors.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="meteors.module.production.classpath">
    <path refid="${module.jdk.classpath.meteors}"/>
    <path refid="library.hamcrest_core.classpath"/>
    <path refid="library.junit_4.classpath"/>
  </path>

  <path id="meteors.runtime.production.module.classpath">
    <pathelement location="${meteors.output.dir}"/>
    <path refid="library.hamcrest_core.classpath"/>
    <path refid="library.junit_4.classpath"/>
  </path>

  <path id="meteors.module.classpath">
    <path refid="${module.jdk.classpath.meteors}"/>
    <pathelement location="${meteors.output.dir}"/>
    <path refid="library.hamcrest_core.classpath"/>
    <path refid="library.junit_4.classpath"/>
    <path refid="library.junit_4.11.classpath"/>
  </path>

  <path id="meteors.runtime.module.classpath">
    <pathelement location="${meteors.testoutput.dir}"/>
    <pathelement location="${meteors.output.dir}"/>
    <path refid="library.hamcrest_core.classpath"/>
    <path refid="library.junit_4.classpath"/>
    <path refid="library.junit_4.11.classpath"/>
  </path>


  <patternset id="excluded.from.module.meteors">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.meteors">
    <patternset refid="excluded.from.module.meteors"/>
  </patternset>

  <path id="meteors.module.sourcepath">
    <dirset dir="${module.meteors.basedir}">
      <include name="src"/>
    </dirset>
  </path>


  <target name="compile.module.meteors" depends="compile.module.meteors.production,compile.module.meteors.tests" description="Compile module Meteors"/>

  <target name="compile.module.meteors.production" depends="register.custom.compilers" description="Compile module Meteors; production classes">
    <mkdir dir="${meteors.output.dir}"/>
    <javac2 destdir="${meteors.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.meteors}/javac">
      <compilerarg line="${compiler.args.meteors}"/>
      <bootclasspath refid="meteors.module.bootclasspath"/>
      <classpath refid="meteors.module.production.classpath"/>
      <src refid="meteors.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.meteors"/>
    </javac2>

    <copy todir="${meteors.output.dir}">
      <fileset dir="${module.meteors.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.module.meteors.tests" depends="register.custom.compilers,compile.module.meteors.production" description="compile module Meteors; test classes" unless="skip.tests"/>

  <target name="clean.module.meteors" description="cleanup module">
    <delete dir="${meteors.output.dir}"/>
    <delete dir="${meteors.testoutput.dir}"/>
  </target>

  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>

  <target name="clean" depends="clean.module.meteors" description="cleanup all"/>

  <target name="build.modules" depends="init, clean, compile.module.meteors" description="build all modules"/>

  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.meteors_by_esteban_valle:jar" value="${basedir}/out/artifacts/Meteors_by_Esteban_Valle_jar"/>
    <property name="artifact.output.meteors:jar" value="${basedir}/out/artifacts/Meteors_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Meteors.jar" value="${artifacts.temp.dir}/Meteors.jar"/>
    <property name="temp.jar.path.Meteors.jar2" value="${artifacts.temp.dir}/1/Meteors.jar"/>
    <mkdir dir="${artifacts.temp.dir}/1"/>
  </target>

  <target name="artifact.meteors_by_esteban_valle:jar" depends="init.artifacts, compile.module.meteors" description="Build &#39;Meteors by Esteban Valle:jar&#39; artifact">
    <property name="artifact.temp.output.meteors_by_esteban_valle:jar" value="${artifacts.temp.dir}/Meteors_by_Esteban_Valle_jar"/>
    <mkdir dir="${artifact.temp.output.meteors_by_esteban_valle:jar}"/>
    <jar destfile="${temp.jar.path.Meteors.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${meteors.output.dir}"/>
      <zipfileset src="${idea.home}/lib/junit-4.11.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/junit-rt.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/idea-junit.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/resources_en.jar"/>
      <zipfileset src="${idea.home}/lib/hamcrest-core-1.3.jar"/>
      <zipfileset file="/resources/engines.wav"/>
      <zipfileset file="/resources/engines_loud.wav"/>
      <zipfileset file="/resources/explosion.wav"/>
      <zipfileset file="/resources/explosion_high.wav"/>
      <zipfileset file="/resources/explosion_medium.wav"/>
      <zipfileset file="/resources/high.wav"/>
      <zipfileset file="/resources/low.wav"/>
      <zipfileset file="/resources/meteor_a_theme.wav"/>
      <zipfileset file="/resources/meteor_a_theme_240.wav"/>
      <zipfileset file="${basedir}/Meteors.iml"/>
      <zipfileset file="/resources/old a theme.wav"/>
      <zipfileset file="/resources/pew.wav"/>
      <zipfileset file="/resources/Readme.txt"/>
      <zipfileset file="/resources/saucer_woo.wav"/>
      <zipfileset file="/resources/sound.wav"/>
      <zipfileset file="/resources/Vectorb.ttf"/>
      <zipfileset file="${basedir}/src/EndGame.java"/>
      <zipfileset file="${basedir}/src/Explosion.java"/>
      <zipfileset file="${basedir}/src/InputHandler.java"/>
      <zipfileset file="${basedir}/src/Meteor.java"/>
      <zipfileset file="${basedir}/src/MeteorAudioManager.java"/>
      <zipfileset file="${basedir}/src/MeteorGame.java"/>
      <zipfileset file="${basedir}/src/MeteorGameTest.java"/>
      <zipfileset file="${basedir}/src/MeteorManager.java"/>
      <zipfileset file="${basedir}/src/MeteorManagerTest.java"/>
      <zipfileset file="${basedir}/src/Meteors.java"/>
      <zipfileset file="${basedir}/src/MeteorTest.java"/>
      <zipfileset file="${basedir}/src/Projectile.java"/>
      <zipfileset file="${basedir}/src/ProjectileTest.java"/>
      <zipfileset file="${basedir}/src/Saucer.java"/>
      <zipfileset file="${basedir}/src/Ship.java"/>
      <zipfileset file="${basedir}/src/ShipTest.java"/>
      <zipfileset file="${basedir}/src/Welcome.java"/>
    </jar>
    <copy file="${temp.jar.path.Meteors.jar}" tofile="${artifact.temp.output.meteors_by_esteban_valle:jar}/Meteors.jar"/>
  </target>

  <target name="artifact.meteors:jar" depends="init.artifacts, compile.module.meteors" description="Build &#39;Meteors:jar&#39; artifact">
    <property name="artifact.temp.output.meteors:jar" value="${artifacts.temp.dir}/Meteors_jar"/>
    <mkdir dir="${artifact.temp.output.meteors:jar}"/>
    <jar destfile="${temp.jar.path.Meteors.jar2}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${meteors.output.dir}"/>
      <zipfileset src="${idea.home}/lib/junit-4.11.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/junit-rt.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/idea-junit.jar"/>
      <zipfileset src="${idea.home}/plugins/junit/lib/resources_en.jar"/>
      <zipfileset src="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    </jar>
    <copy file="${temp.jar.path.Meteors.jar2}" tofile="${artifact.temp.output.meteors:jar}/Meteors.jar"/>
  </target>

  <target name="build.all.artifacts" depends="artifact.meteors_by_esteban_valle:jar, artifact.meteors:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.meteors_by_esteban_valle:jar}"/>
    <copy todir="${artifact.output.meteors_by_esteban_valle:jar}">
      <fileset dir="${artifact.temp.output.meteors_by_esteban_valle:jar}"/>
    </copy>
    <mkdir dir="${artifact.output.meteors:jar}"/>
    <copy todir="${artifact.output.meteors:jar}">
      <fileset dir="${artifact.temp.output.meteors:jar}"/>
    </copy>

    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>

  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>